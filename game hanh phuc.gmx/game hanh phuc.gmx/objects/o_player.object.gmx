<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT
enum states {
    idle,
    walk,
    attack,
    jetpack,
    dead,
    hit,
    snorking,
    run,
}
state = states.idle;

//ABILITIES
hp = 3;
spd = 4;
grav = 1;
moveX = 0;
moveY = 0;
jumpCounter = 0;
jumpMax = 2;
attackCount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CONTROLLER
switch (state) {
    case states.idle:
        scr_idle();
        break;
        
    case states.walk:
        scr_walk();
        break;
        
    case states.jump:
        scr_jump();
        break;
        
    case states.attack:
        scr_attack();
        break;
    
    case states.snorking:
        scr_snorking();
        break;
}

//MOVEMENT
var move = pressD - pressA;
    moveX = spd * move;

//GRAVITY
if (!place_meeting(x, y + 1, o_solid)) {
    moveY += grav;
    if (moveY &gt; 9) {
        moveY = 9;
    }
}
if (place_meeting(x, y + moveY, o_solid)) {
    while (!place_meeting(x, y + sign(moveY), o_solid)) {
        y += sign(moveY)
    }
    
    moveY = 0;
    jumpCount = 0;
}

if (place_meeting(x + moveX, y-2, o_solid)) {
    while (!place_meeting(x + sign(moveX), y -2, o_solid)) {
        x += sign(moveX)
    }
}

y +=moveY;
x +=moveX;

//SPRITE CONTROLLER
if (move != 0) {
    image_xscale = sign(move);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
